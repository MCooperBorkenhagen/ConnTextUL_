# Use an official Python runtime as a parent image
FROM python:3.10

# Set the working directory in the container to /dev
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    python3-ipykernel \
    vim \
    libcurl4-gnutls-dev \
    libssl-dev \
    libxml2-dev \
    && rm -rf /var/lib/apt/lists/*

# Install R
RUN apt-get update && apt-get install -y r-base

# Install Poetry for Python dependency management
RUN pip install poetry

# Set up poetry configuration to avoid creating a virtual environment
RUN poetry config virtualenvs.create false

# Copy the project files (including pyproject.toml and poetry.lock)
COPY pyproject.toml poetry.lock ./

# Install dependencies via Poetry (including development dependencies)
RUN poetry install --no-root

# Install R packages (example: tidyverse, data.table)
# You can modify this to include the packages your team commonly uses
RUN R --silent --slave --no-save --no-restore -e "install.packages(c('tidyverse', 'data.table'), repos='http://cran.rstudio.com/')"

# If using Jupyter notebooks, install R kernel
RUN R --silent --slave --no-save --no-restore -e "install.packages('IRkernel', repos='http://cran.rstudio.com/'); IRkernel::installspec(user = FALSE)"
RUN R --silent --slave --no-save --no-restore -e "install.packages('languageserver', repos='https://cloud.r-project.org/')"

# Copy the rest of the project files
COPY . .